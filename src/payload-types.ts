/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'gallery-sections': GallerySection;
    'gallery-videos': GalleryVideo;
    'gallery-images': GalleryImage;
    'team-members': TeamMember;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'gallery-sections': GallerySectionsSelect<false> | GallerySectionsSelect<true>;
    'gallery-videos': GalleryVideosSelect<false> | GalleryVideosSelect<true>;
    'gallery-images': GalleryImagesSelect<false> | GalleryImagesSelect<true>;
    'team-members': TeamMembersSelect<false> | TeamMembersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery-sections".
 */
export interface GallerySection {
  id: string;
  /**
   * The title displayed for this gallery section (e.g., "Corporate Videos", "Event Highlights")
   */
  title: string;
  /**
   * URL-friendly identifier for this section
   */
  slug: string;
  /**
   * Optional description for this section
   */
  description?: string | null;
  /**
   * Type of content this section displays
   */
  contentType: 'video' | 'image';
  /**
   * Display order (lower numbers appear first)
   */
  order: number;
  /**
   * Toggle section visibility on the frontend
   */
  isVisible?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery-videos".
 */
export interface GalleryVideo {
  id: string;
  /**
   * Title displayed below the video
   */
  title: string;
  /**
   * The gallery section this video belongs to
   */
  section: string | GallerySection;
  /**
   * Full URL from YouTube or Vimeo (e.g., https://www.youtube.com/watch?v=... or https://vimeo.com/...)
   */
  videoUrl: string;
  /**
   * Auto-detected from URL, but can be manually set
   */
  videoType: 'youtube' | 'vimeo';
  /**
   * Extracted video ID (auto-populated)
   */
  videoId?: string | null;
  /**
   * Optional custom thumbnail (if not provided, platform default will be used)
   */
  thumbnail?: (string | null) | Media;
  /**
   * Optional video description or caption
   */
  description?: string | null;
  /**
   * Featured videos are displayed larger at the top of each section
   */
  isFeatured?: boolean | null;
  /**
   * Display order within the section (lower numbers appear first)
   */
  order?: number | null;
  /**
   * Toggle video visibility
   */
  isVisible?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery-images".
 */
export interface GalleryImage {
  id: string;
  /**
   * Title displayed for this image carousel
   */
  title: string;
  /**
   * The gallery section this image carousel belongs to
   */
  section: string | GallerySection;
  /**
   * Upload multiple images for this carousel (1-20 images)
   */
  images: {
    image: string | Media;
    /**
     * Optional caption for this image
     */
    caption?: string | null;
    /**
     * Accessibility description (defaults to media alt if empty)
     */
    altText?: string | null;
    id?: string | null;
  }[];
  /**
   * Optional description for this image gallery
   */
  description?: string | null;
  /**
   * Featured image galleries are displayed larger at the top of each section
   */
  isFeatured?: boolean | null;
  /**
   * Display order within the section (lower numbers appear first)
   */
  order?: number | null;
  /**
   * Toggle gallery visibility
   */
  isVisible?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team-members".
 */
export interface TeamMember {
  id: string;
  name: string;
  role: string;
  /**
   * A brief description of the team member
   */
  bio: string;
  image: string | Media;
  /**
   * Lower numbers appear first
   */
  order: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'gallery-sections';
        value: string | GallerySection;
      } | null)
    | ({
        relationTo: 'gallery-videos';
        value: string | GalleryVideo;
      } | null)
    | ({
        relationTo: 'gallery-images';
        value: string | GalleryImage;
      } | null)
    | ({
        relationTo: 'team-members';
        value: string | TeamMember;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery-sections_select".
 */
export interface GallerySectionsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  contentType?: T;
  order?: T;
  isVisible?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery-videos_select".
 */
export interface GalleryVideosSelect<T extends boolean = true> {
  title?: T;
  section?: T;
  videoUrl?: T;
  videoType?: T;
  videoId?: T;
  thumbnail?: T;
  description?: T;
  isFeatured?: T;
  order?: T;
  isVisible?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery-images_select".
 */
export interface GalleryImagesSelect<T extends boolean = true> {
  title?: T;
  section?: T;
  images?:
    | T
    | {
        image?: T;
        caption?: T;
        altText?: T;
        id?: T;
      };
  description?: T;
  isFeatured?: T;
  order?: T;
  isVisible?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team-members_select".
 */
export interface TeamMembersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  bio?: T;
  image?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}